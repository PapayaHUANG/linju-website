---
import { getCollection } from 'astro:content';

export async function getStaticPaths({ paginate }) {
  const allTags = ['devTips', 'lifeHacks', 'englishLearnings'];
  const allPodcasts = await getCollection('podcast');

  return allTags.map((tag) => {
    const filteredPodcasts = allPodcasts.filter((podcast) =>
      podcast.data.tags.includes(tag)
    );
    return paginate(filteredPodcasts, {
      params: { tag },
      pageSize: 5,
    });
  });
}

import MainLayout from '../../../layouts/MainLayout.astro';
import PodcastCard from '../../../components/PodcastCard.astro';
// import Pagination from '../../../components/Pagination.astro';

const { page } = Astro.props;
// const pathname = new URL(Astro.request.url).pathname.split('/');
// const firstPath = pathname[1];

// const { currentPage, lastPage } = page;
// const { current, prev, next } = page.url;
const params = Astro.params;
---

<MainLayout title={params.tag}>
  <div class="mt-16 text-center">
    <h1 class="text-4xl lg:text-5xl font-bold lg:tracking-tight">
      {params.tag}
    </h1>
    <main class="mt-16 flex flex-col">
      <ol class="flex flex-col space-y-8">
        {
          page.data.map((post) => (
            <li>
              <PodcastCard
                title={post.data.title}
                description={post.data.description}
                date={post.data.date}
                url={post.slug}
              />
            </li>
          ))
        }
      </ol>
    </main>
    <!-- <div class="mt-16">
      {
        page.length > 2 && (
          <div>
            <Pagination
              length={lastPage}
              currentUrl={current}
              currentPage={currentPage}
              firstUrl={`/${firstPath}`}
              prevUrl={prev}
              nextUrl={next}
              lastUrl={`/${firstPath}/${lastPage}`}
            />
          </div>
        )
      }
    </div> -->
  </div>
</MainLayout>
